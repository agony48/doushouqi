package com.color_analysis_in_xinjiangtimes.push;


import java.io.Serializable;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

/**
 * Entity mapped to table PUSH_MESSAGE.
 */
public class PushMessage implements Serializable {

    private Long id;
    private String alertMessage;
    private String memberId;
    private String sound;
    private String messageType;
    private Boolean isRead= Boolean.FALSE;
    private String messageTime;
    private String loginDate;
    private String extend0;
    private String extend1;
    private String commuity;
    private long moreId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient PushMessageDao myDao;

    private More more;
    private Long more__resolvedKey;




    public PushMessage() {
    }

    public PushMessage(Long id) {
        this.id = id;
    }

    public PushMessage(Long id, String alertMessage, String memberId, String sound, String messageType, Boolean isRead, String messageTime, long moreId) {
        this.id = id;
        this.alertMessage = alertMessage;
        this.memberId = memberId;
        this.sound = sound;
        this.messageType = messageType;
        this.isRead = isRead;
        this.messageTime = messageTime;
        this.moreId = moreId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPushMessageDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getAlertMessage() {
        return alertMessage;
    }

    public void setAlertMessage(String alertMessage) {
        this.alertMessage = alertMessage;
    }

    public String getUserId() {
        return memberId;
    }

    public void setUserId(String memberId) {
        this.memberId = memberId;
    }

    public String getSound() {
        return sound;
    }

    public void setSound(String sound) {
        this.sound = sound;
    }

    public String getMessageType() {
        return messageType;
    }

    public void setMessageType(String messageType) {
        this.messageType = messageType;
    }
    public String getExtend0() {
        return extend0;
    }

    public void setExtend0(String extend0) {
        this.extend0 = extend0;
    }

    public String getExtend1() {
        return extend1;
    }

    public void setExtend1(String extend1) {
        this.extend1 = extend1;
    }

    public Boolean getIsRead() {
        return isRead;
    }

    public void setIsRead(Boolean isRead) {
        this.isRead = isRead;
    }

    public String getMessageTime() {
        return messageTime;
    }

    public void setMessageTime(String messageTime) {
        this.messageTime = messageTime;
    }

    public long getMoreId() {
        return moreId;
    }

    public void setMoreId(long moreId) {
        this.moreId = moreId;
    }

    /** To-one relationship, resolved on first access. */
    public More getMore() {
        long __key = this.moreId;
        if (more__resolvedKey == null || !more__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            MoreDao targetDao = daoSession.getMoreDao();
            More moreNew = targetDao.load(__key);
            synchronized (this) {
                more = moreNew;
            	more__resolvedKey = __key;
            }
        }
        return more;
    }

    public void setMore(More more) {
        if (more == null) {
            throw new DaoException("To-one property 'moreId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.more = more;
            moreId = more.getId();
            more__resolvedKey = moreId;
        }
    }

    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    public String getCommuity() {
        return commuity;
    }

    public void setCommuity(String commuity) {
        this.commuity = commuity;
    }

    public String getLoginDate() {
        return loginDate;
    }

    public void setLoginDate(String loginDate) {
        this.loginDate = loginDate;
    }
}
